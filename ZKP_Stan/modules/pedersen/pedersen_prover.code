import "./modules/compute_pedersen.code" as pedersen

def main(private field[70] x, private field[70] y, private field[70] z, field[12] hash) -> (field):

    h = pedersen(x[0..6], y[0..6], z[0..6])
    h == hash[0]

    h = pedersen(x[6..12], y[6..12], z[6..12])
    h == hash[1]

    h = pedersen(x[12..18], y[12..18], z[12..18])
    h == hash[2]

    h = pedersen(x[18..24], y[18..24], z[18..24])
    h == hash[3]

    h = pedersen(x[24..30], y[24..30], z[24..30])
    h == hash[4]
    
    h = pedersen(x[30..36], y[30..36], z[30..36])
    h == hash[5]

    h = pedersen(x[36..42], y[36..42], z[36..42])
    h == hash[6]

    h = pedersen(x[42..48], y[42..48], z[42..48])
    h == hash[7]

    h = pedersen(x[48..54], y[48..54], z[48..54])
    h == hash[8]

    h = pedersen(x[54..60], y[54..60], z[54..60])
    h == hash[9]

    h = pedersen(x[60..66], y[60..66], z[60..66])
    h == hash[10]

    h = pedersen([...x[66..70], 0, 0], [...y[66..70], 0, 0], [...z[66..70], 0, 0])
    h == hash[11]
    
    return 11